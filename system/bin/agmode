#!/system/bin/sh
# shellcheck disable=SC1091,SC3043,SC2046,SC2086
MODDIR=/data/adb/modules/meZram
LOGDIR=/data/adb/meZram
CONFIG=$LOGDIR/meZram-config.json

sync_config() {
	cp -rf $CONFIG "$1"
}

# Loading modules
export PATH=$MODDIR/modules/bin:$PATH
. $MODDIR/modules/lmk.sh

# Add new key or edit existing value in custom props
toggle_prop() {
	local prop_name="$1"
	local prop_value="$2"
	local props
	props=$(jq --argjson prop_value "$prop_value" \
		--arg prop_name "$prop_name" '.custom_props | .[$prop_name] = $prop_value' \
		$CONFIG)

	jq --argjson props "$props" '.custom_props = $props' \
		$CONFIG | awk 'BEGIN{RS="";getline<"-";print>ARGV[1]}' \
		$CONFIG
	sync_config /sdcard/meZram-config.json
}

toggle_psi() {
	local psi_value
	psi_value=$(jq '.custom_props."ro.lmk.use_psi"' "$CONFIG")

	case "$psi_value" in
	true)
		toggle_prop "ro.lmk.use_psi" false
		;;
	false)
		toggle_prop "ro.lmk.use_psi" true
		;;
	esac
}

toggle_minfree_levels() {
	ml_value=$(jq '.custom_props."ro.lmk.use_minfree_levels"' $CONFIG)

	case "$ml_value" in
	true)
		toggle_prop "ro.lmk.use_minfree_levels" false
		;;
	false)
		toggle_prop "ro.lmk.use_minfree_levels" true
		;;
	esac
}

printme() {
	echo "${TURQUOISE}>  ${RESET}${YELLOW}$1${RESET}"
	logger "$1"
}

# Parse command-line options
for opt in "$@"; do
	case "$opt" in
	-g | --get)
		lmkd_props=$(getprop | grep "ro.lmk" | sed 's/\[//g;s/\]//g;s/: /=/g')

		titler "LMKD PROPS"
		echo "$lmkd_props"
		;;
	--enable)
		jq '.agmode = "on"' $CONFIG |
			awk 'BEGIN{RS="";getline<"-";print>ARGV[1]}' $CONFIG &&
			sync_config /sdcard/meZram-config.json
		printme "😾 Aggressive mode enabled"
		;;
	--disable)
		jq '.agmode = "off"' $CONFIG |
			awk 'BEGIN{RS="";getline<"-";print>ARGV[1]}' $CONFIG &&
			sync_config /sdcard/meZram-config.json
		printme "😿 Aggressive mode disabled"
		;;
	-h | --help)
		if [ "$2" = "id" ]; then
			cat "$MODDIR"/man/agmode-id.txt
			exit 1
		fi

		cat "$MODDIR"/man/agmode.txt
		;;
	--log)
		if [ "$2" ]; then
			watch -t tail -n "$2" "$LOGDIR"/meZram.log
		else
			_ln=$(tput lines)
			_cols=$(tput cols)
			tail -n $_ln "$LOGDIR"/meZram.log >/data/tmp/logged.tmp
			to_remove=0
			while read -r log; do
				count_word=$(printf '%s' "$log" | tr -s " " | wc -c)
				to_remove=$((to_remove + count_word / _cols))
			done </data/tmp/logged.tmp
			watch -t tail -n $((_ln - to_remove / 2 - 2)) $LOGDIR/meZram.log
		fi
		;;
	--show)
		titler "MEZRAM CONFIG"
		cat "$CONFIG"
		;;
	--reload)
		cp /sdcard/meZram-config.json $CONFIG
		custom_props_apply 2>/dev/null &&
			resetprop lmkd.reinit 1 &&
			printme "Custom props applied"
		sync_config /sdcard/meZram-config.json
		;;
	--rmswap)
		printme "Turning off SWAP. Please wait"
		printme "$(swapoff /data/swap_file)"
		rm -vf /data/swap_file
		printme "SWAP removed. Don't be stupid bud. Make another one!!!"
		;;
	--switch)
		printme "Switching LMKD mode"
		toggle_psi
		toggle_minfree_levels
		custom_props_apply 2>/dev/null &&
			resetprop lmkd.reinit 1 &&
			sync_config /sdcard/meZram-config.json

		if [ "$ml_value" = false ]; then
			printme "LMKD mode switched to minfree_levels"
		else
			printme "LMKD mode switched to psi"
		fi
		;;
	wait-time=*)
		value=$(echo "$opt" | sed 's/[^0-9]*=//g')
		jq --arg wait_time "$value" \
			'.wait_time = $wait_time' $CONFIG |
			awk 'BEGIN{RS="";getline<"-";print>ARGV[1]}' $CONFIG
		sync_config /sdcard/meZram-config.json
		printme "Wait time set to $value"
		;;
	downgrade_pressure=*)
		value=$(echo "$opt" | sed 's/[^0-9]//g')

		if is_number "${value}"; then
			toggle_prop "ro.lmk.downgrade_pressure" "$value"
			printme "Prop \"ro.lmk.downgrade_pressure\" set to $value"
			echo "⚠️!!! Beware not to set >=80 in minfree_levels mode. It will break you device !"
		else
			printme "Invalid value"
		fi
		;;
	*)
		agmode --help
		;;
	esac
done

[ -z $1 ] && agmode --help
